{"version":3,"names":["CHART_STYLES","grid","color","lineWidth","dash","line","point","radius","fill","stroke","label","fontSize","AXIS_MARGIN","top","bottom","drawingArea","ctxH","center","drawGridLines","ctx","canvasWidth","area","save","beginPath","strokeStyle","moveTo","lineTo","setLineDash","restore","drawBottomLabels","bottomY","data","labelSpace","length","setFontSize","fillStyle","forEach","item","index","dateStr","date","split","slice","xPos","setTextAlign","fillText"],"sources":["chart.js"],"sourcesContent":["// 样式常量配置\r\nexport const CHART_STYLES = {\r\n\tgrid: {\r\n\t\tcolor: '#E3E3E5',\r\n\t\tlineWidth: 1,\r\n\t\tdash: [2, 4]\r\n\t},\r\n\tline: {\r\n\t\tcolor: '#de6ea6',\r\n\t\tlineWidth: 0.5\r\n\t},\r\n\tpoint: {\r\n\t\tradius: 3,\r\n\t\tfill: '#00B6E6',\r\n\t\tstroke: true\r\n\t},\r\n\tlabel: {\r\n\t\tfontSize: 10,\r\n\t\tcolor: '#000'\r\n\t}\r\n}\r\n\r\n// 坐标轴边距配置\r\nexport const AXIS_MARGIN = {\r\n\ttop: 10,\r\n\tbottom: 20\r\n}\r\n\r\n// 计算绘图区域\r\nexport const drawingArea = {\r\n\ttop: AXIS_MARGIN.top,\r\n\tbottom: ctxH - AXIS_MARGIN.bottom,\r\n\tget center() {\r\n\t\treturn (this.top + this.bottom) / 2\r\n\t}\r\n}\r\n\r\n/* 计算Y轴坐标 */\r\nexport const calculateY = (value, maxValue, area) => {\r\n\tconst Yrange = area.bottom - area.top\r\n\treturn area.top + Yrange * (1 - value / maxValue)\r\n}\r\n\r\n\r\n/* 绘制网格线 */\r\nexport const drawGridLines = (ctx, canvasWidth, area) => {\r\n\tctx.save() // 保存当前上下文状态\r\n\r\n\t// 绘制底部实线\r\n\tctx.beginPath()\r\n\tctx.strokeStyle = CHART_STYLES.grid.color\r\n\tctx.lineWidth = CHART_STYLES.grid.lineWidth\r\n\r\n\tctx.moveTo(0, area.bottom)\r\n\tctx.lineTo(canvasWidth, area.bottom)\r\n\tctx.stroke()\r\n\r\n\t// 绘制中间虚线\r\n\tctx.beginPath()\r\n\tctx.setLineDash(CHART_STYLES.grid.dash)\r\n\tctx.moveTo(0, area.center)\r\n\tctx.lineTo(canvasWidth, area.center)\r\n\tctx.stroke()\r\n\r\n\tctx.restore() // 恢复原始上下文状态\r\n}\r\n\r\n/* 绘制底部日期标签 */\r\nexport const drawBottomLabels = (ctx, canvasWidth, bottomY, data) => {\r\n\tconst labelSpace = canvasWidth / (data.length + 1) // 动态计算间距\r\n\t\r\n\tctx.save()\r\n\tctx.setFontSize(CHART_STYLES.label.fontSize)\r\n\tctx.fillStyle = CHART_STYLES.label.color\r\n\tif(data.length===7||data.length===12){\r\n\t\tdata.forEach((item, index) => {\r\n\t\t\tconst dateStr = item.date.split('-').slice(-1) // 提取DD\r\n\t\t\tconst xPos = (index + 1) * labelSpace\r\n\t\t\tctx.setTextAlign('center')\r\n\t\t\tctx.fillText(dateStr, xPos, bottomY + 15) // 下移15px避免重叠\r\n\t\t})\r\n\t}else{\r\n\t\tdata.forEach((item, index) => {\r\n\t\t\tif(index%6===0){\r\n\t\t\t\tconst dateStr = item.date.split('-').slice(-1)  // 提取DD\r\n\t\t\t\tconst xPos = (index + 1) * labelSpace\r\n\t\t\t\tctx.setTextAlign('center')\r\n\t\t\t\tctx.fillText(dateStr, xPos, bottomY + 15) // 下移15px避免重叠\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\tctx.restore()\r\n}"],"mappings":";;;AACY,IAACA,YAAA,GAAe;EAC3BC,IAAA,EAAM;IACLC,KAAA,EAAO;IACPC,SAAA,EAAW;IACXC,IAAA,EAAM,CAAC,GAAG,CAAC;EACX;EACDC,IAAA,EAAM;IACLH,KAAA,EAAO;IACPC,SAAA,EAAW;EACX;EACDG,KAAA,EAAO;IACNC,MAAA,EAAQ;IACRC,IAAA,EAAM;IACNC,MAAA,EAAQ;EACR;EACDC,KAAA,EAAO;IACNC,QAAA,EAAU;IACVT,KAAA,EAAO;EACP;AACF;AAGO,IAAMU,WAAA,GAAc;EAC1BC,GAAA,EAAK;EACLC,MAAA,EAAQ;AACT;AAGY,IAACC,WAAA,GAAc;EAC1BF,GAAA,EAAKD,WAAA,CAAYC,GAAA;EACjBC,MAAA,EAAQE,IAAA,GAAOJ,WAAA,CAAYE,MAAA;EAC3B,IAAIG,OAAA,EAAS;IACZ,QAAQ,KAAKJ,GAAA,GAAM,KAAKC,MAAA,IAAU;EAClC;AACF;AAUY,IAACI,aAAA,GAAgB,SAAhBA,cAAiBC,GAAA,EAAKC,WAAA,EAAaC,IAAA,EAAS;EACxDF,GAAA,CAAIG,IAAA,EAAM;EAGVH,GAAA,CAAII,SAAA,EAAW;EACfJ,GAAA,CAAIK,WAAA,GAAcxB,YAAA,CAAaC,IAAA,CAAKC,KAAA;EACpCiB,GAAA,CAAIhB,SAAA,GAAYH,YAAA,CAAaC,IAAA,CAAKE,SAAA;EAElCgB,GAAA,CAAIM,MAAA,CAAO,GAAGJ,IAAA,CAAKP,MAAM;EACzBK,GAAA,CAAIO,MAAA,CAAON,WAAA,EAAaC,IAAA,CAAKP,MAAM;EACnCK,GAAA,CAAIV,MAAA,EAAQ;EAGZU,GAAA,CAAII,SAAA,EAAW;EACfJ,GAAA,CAAIQ,WAAA,CAAY3B,YAAA,CAAaC,IAAA,CAAKG,IAAI;EACtCe,GAAA,CAAIM,MAAA,CAAO,GAAGJ,IAAA,CAAKJ,MAAM;EACzBE,GAAA,CAAIO,MAAA,CAAON,WAAA,EAAaC,IAAA,CAAKJ,MAAM;EACnCE,GAAA,CAAIV,MAAA,EAAQ;EAEZU,GAAA,CAAIS,OAAA,EAAS;AACd;AAGY,IAACC,gBAAA,GAAmB,SAAnBA,iBAAoBV,GAAA,EAAKC,WAAA,EAAaU,OAAA,EAASC,IAAA,EAAS;EACpE,IAAMC,UAAA,GAAaZ,WAAA,IAAeW,IAAA,CAAKE,MAAA,GAAS;EAEhDd,GAAA,CAAIG,IAAA,EAAM;EACVH,GAAA,CAAIe,WAAA,CAAYlC,YAAA,CAAaU,KAAA,CAAMC,QAAQ;EAC3CQ,GAAA,CAAIgB,SAAA,GAAYnC,YAAA,CAAaU,KAAA,CAAMR,KAAA;EACnC,IAAG6B,IAAA,CAAKE,MAAA,KAAS,KAAGF,IAAA,CAAKE,MAAA,KAAS,IAAG;IACpCF,IAAA,CAAKK,OAAA,CAAQ,UAACC,IAAA,EAAMC,KAAA,EAAU;MAC7B,IAAMC,OAAA,GAAUF,IAAA,CAAKG,IAAA,CAAKC,KAAA,CAAM,GAAG,EAAEC,KAAA,CAAM,EAAE;MAC7C,IAAMC,IAAA,IAAQL,KAAA,GAAQ,KAAKN,UAAA;MAC3Bb,GAAA,CAAIyB,YAAA,CAAa,QAAQ;MACzBzB,GAAA,CAAI0B,QAAA,CAASN,OAAA,EAASI,IAAA,EAAMb,OAAA,GAAU,EAAE;IAC3C,CAAG;EACH,OAAM;IACJC,IAAA,CAAKK,OAAA,CAAQ,UAACC,IAAA,EAAMC,KAAA,EAAU;MAC7B,IAAGA,KAAA,GAAM,MAAI,GAAE;QACd,IAAMC,OAAA,GAAUF,IAAA,CAAKG,IAAA,CAAKC,KAAA,CAAM,GAAG,EAAEC,KAAA,CAAM,EAAE;QAC7C,IAAMC,IAAA,IAAQL,KAAA,GAAQ,KAAKN,UAAA;QAC3Bb,GAAA,CAAIyB,YAAA,CAAa,QAAQ;QACzBzB,GAAA,CAAI0B,QAAA,CAASN,OAAA,EAASI,IAAA,EAAMb,OAAA,GAAU,EAAE;MACxC;IAEJ,CAAG;EACD;EAGDX,GAAA,CAAIS,OAAA,EAAS;AACd","ignoreList":[]}