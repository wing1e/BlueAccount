{"version":3,"file":"bar-chart.js","sources":["utils/chart/bar-chart.js"],"sourcesContent":["import { getNodeInfo } from '../node-info'\r\nimport {CHART_STYLES,AXIS_MARGIN,drawGridLines,calculateY} from \"./chart.js\"\r\n\r\nexport const barChartInit = async (instance, chartData, className, canvasId) =>{\r\n\ttry {\r\n\t\t// 获取画布尺寸\r\n\t\tconst canvasNode = await getNodeInfo(instance,className)\r\n\t\t\r\n        const {width:ctxW,height:ctxH} = canvasNode[0]\r\n\t\t\r\n\t\t// 创建绘图上下文\r\n\t\tconst ctx = uni.createCanvasContext(canvasId,instance)\r\n\t\t\r\n\t\t// 计算绘图区域\r\n\t\tconst drawArea = {\r\n\t\t\ttop: AXIS_MARGIN.top,\r\n\t\t\tbottom: ctxH - AXIS_MARGIN.bottom,\r\n\t\t\tget center() {\r\n\t\t\t\treturn (this.top + this.bottom) / 2\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// 绘制网格系统\r\n\t\tdrawGridLines(ctx,ctxW,drawArea)\r\n\t\t\r\n\t\t// 绘制底部标签\r\n\t\tdrawBottomLabels(ctx,ctxW,drawArea.bottom,chartData,\"bar\")\r\n\t\t\r\n\t\tconst BarSpace = ctxW/25;\r\n\t\t\r\n\t\tconst MaxValue = Math.max(...chartData.map(item => item.expense))\r\n\t\t\r\n\t\tconst points = chartData.map((item,index) => ({\r\n\t\t\tx:(2*index+1)*BarSpace,\r\n\t\t\ty:calculateY(item.expense,MaxValue,drawArea),\r\n\t\t\tvalue:item.expense\r\n\t\t}))\r\n\t\t\r\n\t\tpoints.forEach(item=>{\r\n\t\t\tctx.fillRect(item.x,item.y,BarSpace,drawArea.bottom-item.y)\r\n\t\t\tctx.setFillStyle('#de6ea6')\r\n\t\t})\r\n\t\t\r\n\t\tctx.draw()\r\n\t\t\r\n\t}catch(err){\r\n\t\tconsole.log(err);\r\n    }\r\n}\r\n\r\n/* 绘制底部日期标签 */\r\nconst drawBottomLabels = (ctx, canvasWidth, bottomY, data) => {\r\n\tconst labelSpace = canvasWidth / 25 // 间距\r\n\t\r\n\tctx.save()\r\n\tctx.setFontSize(CHART_STYLES.label.fontSize)\r\n\tctx.fillStyle = CHART_STYLES.label.color\r\n\tdata.forEach((item, index) => {\r\n\t\t\tconst dateStr = item.date.split('-')[1] // 提取DD\r\n\t\t\tconst xPos = (2*index + 1) * labelSpace\r\n\t\t\tctx.setTextAlign('center')\r\n\t\t\tctx.fillText(dateStr, xPos, bottomY + 15) // 下移15px避免重叠\r\n\t})\r\n\r\n\tctx.restore()\r\n}\r\n"],"names":["getNodeInfo","uni","AXIS_MARGIN","drawGridLines","calculateY","CHART_STYLES"],"mappings":";;;;AAGY,MAAC,eAAe,OAAO,UAAU,WAAW,WAAW,aAAY;AAC9E,MAAI;AAEH,UAAM,aAAa,MAAMA,2BAAY,UAAS,SAAS;AAEjD,UAAM,EAAC,OAAM,MAAK,QAAO,KAAI,IAAI,WAAW,CAAC;AAGnD,UAAM,MAAMC,cAAG,MAAC,oBAAoB,UAAS,QAAQ;AAGrD,UAAM,WAAW;AAAA,MAChB,KAAKC,kBAAW,YAAC;AAAA,MACjB,QAAQ,OAAOA,kBAAAA,YAAY;AAAA,MAC3B,IAAI,SAAS;AACZ,gBAAQ,KAAK,MAAM,KAAK,UAAU;AAAA,MAClC;AAAA,IACD;AAGDC,oCAAc,KAAI,MAAK,QAAQ;AAG/B,qBAAiB,KAAI,MAAK,SAAS,QAAO,WAAU,KAAK;AAEzD,UAAM,WAAW,OAAK;AAEtB,UAAM,WAAW,KAAK,IAAI,GAAG,UAAU,IAAI,UAAQ,KAAK,OAAO,CAAC;AAEhE,UAAM,SAAS,UAAU,IAAI,CAAC,MAAK,WAAW;AAAA,MAC7C,IAAG,IAAE,QAAM,KAAG;AAAA,MACd,GAAEC,kBAAAA,WAAW,KAAK,SAAQ,UAAS,QAAQ;AAAA,MAC3C,OAAM,KAAK;AAAA,IACd,EAAI;AAEF,WAAO,QAAQ,UAAM;AACpB,UAAI,SAAS,KAAK,GAAE,KAAK,GAAE,UAAS,SAAS,SAAO,KAAK,CAAC;AAC1D,UAAI,aAAa,SAAS;AAAA,IAC7B,CAAG;AAED,QAAI,KAAM;AAAA,EAEV,SAAM,KAAI;AACVH,kBAAAA,MAAY,MAAA,OAAA,kCAAA,GAAG;AAAA,EACZ;AACL;AAGA,MAAM,mBAAmB,CAAC,KAAK,aAAa,SAAS,SAAS;AAC7D,QAAM,aAAa,cAAc;AAEjC,MAAI,KAAM;AACV,MAAI,YAAYI,+BAAa,MAAM,QAAQ;AAC3C,MAAI,YAAYA,+BAAa,MAAM;AACnC,OAAK,QAAQ,CAAC,MAAM,UAAU;AAC5B,UAAM,UAAU,KAAK,KAAK,MAAM,GAAG,EAAE,CAAC;AACtC,UAAM,QAAQ,IAAE,QAAQ,KAAK;AAC7B,QAAI,aAAa,QAAQ;AACzB,QAAI,SAAS,SAAS,MAAM,UAAU,EAAE;AAAA,EAC3C,CAAE;AAED,MAAI,QAAS;AACd;;"}