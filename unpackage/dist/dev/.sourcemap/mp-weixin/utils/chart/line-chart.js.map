{"version":3,"file":"line-chart.js","sources":["utils/chart/line-chart.js"],"sourcesContent":["import { examiner } from \"../examiner.js\"\r\nimport {getNodeInfo} from \"../node-info.js\"\r\nimport {CHART_STYLES,AXIS_MARGIN,drawGridLines,calculateY} from \"./chart.js\"\r\n\r\nexport const indexChartInit = async (instance, chartData, className, canvasId) => {\r\n\ttry {\r\n\t\t// 获取画布尺寸\r\n\t\tconst canvasNode = await getNodeInfo(instance, className)\r\n\t\tconst {width: ctxW,height: ctxH} = canvasNode[0]\r\n\t\t// 创建绘图上下文\r\n\t\tconst ctx = uni.createCanvasContext(canvasId, instance)\r\n\t\t\r\n\t\t\r\n\t\t// 计算绘图区域\r\n\t\tconst drawArea = {\r\n\t\t\ttop: AXIS_MARGIN.top,\r\n\t\t\tbottom: ctxH - AXIS_MARGIN.bottom,\r\n\t\t\tget center() {\r\n\t\t\t\treturn (this.top + this.bottom) / 2\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// 绘制网格系统\r\n\t\tdrawGridLines(ctx, ctxW, drawArea)\r\n\r\n\t\t// 绘制底部标签\r\n\t\tdrawBottomLabels(ctx, ctxW, drawArea.bottom, chartData)\r\n\r\n\t\t// 绘制数据折线\r\n\t\tif(examiner(chartData)){\r\n\t\t\tdrawChartLine(ctx, chartData, ctxW, drawArea)\r\n\t\t}\r\n\t\t\r\n\t\tctx.draw()\r\n\t} catch (error) {\r\n\t\tconsole.error('图表初始化失败:', error)\r\n\t\t// 可在这里添加错误处理逻辑\r\n\t}\r\n}\r\n\r\n/* 绘制底部日期标签 */\r\nconst drawBottomLabels = (ctx, canvasWidth, bottomY, data) => {\r\n\tconst labelSpace = canvasWidth / (data.length + 1) // 动态计算间距\r\n\t\r\n\tctx.save()\r\n\tctx.setFontSize(CHART_STYLES.label.fontSize)\r\n\tctx.fillStyle = CHART_STYLES.label.color\r\n\tif(data.length<=12){\r\n\t\tdata.forEach((item, index) => {\r\n\t\t\tconst dateStr = item.date.split('-').slice(-1) // 提取DD\r\n\t\t\tconst xPos = (index + 1) * labelSpace\r\n\t\t\tctx.setTextAlign('center')\r\n\t\t\tctx.fillText(dateStr, xPos, bottomY + 15) // 下移15px避免重叠\r\n\t\t})\r\n\t}else{\r\n\t\tdata.forEach((item, index) => {\r\n\t\t\tif(index%6===0){\r\n\t\t\t\tconst dateStr = item.date.split('-').slice(-1)  // 提取DD\r\n\t\t\t\tconst xPos = (index + 1) * labelSpace\r\n\t\t\t\tctx.setTextAlign('center')\r\n\t\t\t\tctx.fillText(dateStr, xPos, bottomY + 15) // 下移15px避免重叠\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\tctx.restore()\r\n}\r\n\r\n\r\n/* 绘制折线图主体 */\r\nconst drawChartLine = (ctx, data, canvasWidth, area) => {\r\n\tconst maxValue = Math.max(...data.map(item => item.expense))\r\n\tconst pointSpace = canvasWidth / (data.length + 1)\r\n\r\n\t// 生成坐标点\r\n\tconst points = data.map((item, index) => ({\r\n\t\tx: (index + 1) * pointSpace,\r\n\t\ty: calculateY(item.expense, maxValue, area),\r\n\t\tvalue: item.expense\r\n\t}))\r\n\r\n\t// 绘制连接线\r\n\tctx.save()\r\n\tctx.beginPath()\r\n\tctx.strokeStyle = CHART_STYLES.line.color\r\n\tctx.lineWidth = CHART_STYLES.line.lineWidth\r\n\tctx.setLineDash([]) // 确保使用实线\r\n\r\n\tpoints.forEach((point, index) => {\r\n\t\tindex === 0 ? ctx.moveTo(point.x, point.y) : ctx.lineTo(point.x, point.y)\r\n\t})\r\n\tctx.stroke()\r\n\r\n\t// 绘制数据点\r\n\tpoints.forEach(point => {\r\n\t\tctx.beginPath()\r\n\t\tctx.arc(point.x, point.y, CHART_STYLES.point.radius, 0, Math.PI * 2)\r\n\t\tctx.fillStyle = CHART_STYLES.point.fill\r\n\t\tctx.fill()\r\n\t\tif (CHART_STYLES.point.stroke) {\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\t})\r\n\r\n\tctx.restore()\r\n}\r\n\r\n"],"names":["getNodeInfo","uni","AXIS_MARGIN","drawGridLines","examiner","CHART_STYLES","calculateY"],"mappings":";;;;;AAIY,MAAC,iBAAiB,OAAO,UAAU,WAAW,WAAW,aAAa;AACjF,MAAI;AAEH,UAAM,aAAa,MAAMA,2BAAY,UAAU,SAAS;AACxD,UAAM,EAAC,OAAO,MAAK,QAAQ,KAAI,IAAI,WAAW,CAAC;AAE/C,UAAM,MAAMC,cAAG,MAAC,oBAAoB,UAAU,QAAQ;AAItD,UAAM,WAAW;AAAA,MAChB,KAAKC,kBAAW,YAAC;AAAA,MACjB,QAAQ,OAAOA,kBAAAA,YAAY;AAAA,MAC3B,IAAI,SAAS;AACZ,gBAAQ,KAAK,MAAM,KAAK,UAAU;AAAA,MAClC;AAAA,IACD;AAGDC,oCAAc,KAAK,MAAM,QAAQ;AAGjC,qBAAiB,KAAK,MAAM,SAAS,QAAQ,SAAS;AAGtD,QAAGC,eAAAA,SAAS,SAAS,GAAE;AACtB,oBAAc,KAAK,WAAW,MAAM,QAAQ;AAAA,IAC5C;AAED,QAAI,KAAM;AAAA,EACV,SAAQ,OAAO;AACfH,kBAAAA,wDAAc,YAAY,KAAK;AAAA,EAE/B;AACF;AAGA,MAAM,mBAAmB,CAAC,KAAK,aAAa,SAAS,SAAS;AAC7D,QAAM,aAAa,eAAe,KAAK,SAAS;AAEhD,MAAI,KAAM;AACV,MAAI,YAAYI,+BAAa,MAAM,QAAQ;AAC3C,MAAI,YAAYA,+BAAa,MAAM;AACnC,MAAG,KAAK,UAAQ,IAAG;AAClB,SAAK,QAAQ,CAAC,MAAM,UAAU;AAC7B,YAAM,UAAU,KAAK,KAAK,MAAM,GAAG,EAAE,MAAM,EAAE;AAC7C,YAAM,QAAQ,QAAQ,KAAK;AAC3B,UAAI,aAAa,QAAQ;AACzB,UAAI,SAAS,SAAS,MAAM,UAAU,EAAE;AAAA,IAC3C,CAAG;AAAA,EACH,OAAM;AACJ,SAAK,QAAQ,CAAC,MAAM,UAAU;AAC7B,UAAG,QAAM,MAAI,GAAE;AACd,cAAM,UAAU,KAAK,KAAK,MAAM,GAAG,EAAE,MAAM,EAAE;AAC7C,cAAM,QAAQ,QAAQ,KAAK;AAC3B,YAAI,aAAa,QAAQ;AACzB,YAAI,SAAS,SAAS,MAAM,UAAU,EAAE;AAAA,MACxC;AAAA,IAEJ,CAAG;AAAA,EACD;AAGD,MAAI,QAAS;AACd;AAIA,MAAM,gBAAgB,CAAC,KAAK,MAAM,aAAa,SAAS;AACvD,QAAM,WAAW,KAAK,IAAI,GAAG,KAAK,IAAI,UAAQ,KAAK,OAAO,CAAC;AAC3D,QAAM,aAAa,eAAe,KAAK,SAAS;AAGhD,QAAM,SAAS,KAAK,IAAI,CAAC,MAAM,WAAW;AAAA,IACzC,IAAI,QAAQ,KAAK;AAAA,IACjB,GAAGC,kBAAAA,WAAW,KAAK,SAAS,UAAU,IAAI;AAAA,IAC1C,OAAO,KAAK;AAAA,EACd,EAAG;AAGF,MAAI,KAAM;AACV,MAAI,UAAW;AACf,MAAI,cAAcD,+BAAa,KAAK;AACpC,MAAI,YAAYA,+BAAa,KAAK;AAClC,MAAI,YAAY,EAAE;AAElB,SAAO,QAAQ,CAAC,OAAO,UAAU;AAChC,cAAU,IAAI,IAAI,OAAO,MAAM,GAAG,MAAM,CAAC,IAAI,IAAI,OAAO,MAAM,GAAG,MAAM,CAAC;AAAA,EAC1E,CAAE;AACD,MAAI,OAAQ;AAGZ,SAAO,QAAQ,WAAS;AACvB,QAAI,UAAW;AACf,QAAI,IAAI,MAAM,GAAG,MAAM,GAAGA,+BAAa,MAAM,QAAQ,GAAG,KAAK,KAAK,CAAC;AACnE,QAAI,YAAYA,+BAAa,MAAM;AACnC,QAAI,KAAM;AACqB;AAC9B,UAAI,OAAQ;AAAA,IACZ;AAAA,EACH,CAAE;AAED,MAAI,QAAS;AACd;;"}